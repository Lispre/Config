if [ `uname` = Linux ]; then
    alias ls=$'ls -XF --color=auto --time-style="+\e[33m[\e[32m%Y-%m-%d \e[35m%k:%M\e[33m]\e[m"'
else
    alias ls="ls -F"
fi

alias R='R --quiet'

function md() {
  mkdir -p "$1"
  cd "$1"
}

LOCAL=$HOME/.local

alias px=proxychains
alias p6=ping6
alias d='dirs -v'
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -v' # -d since coreutils-8.19, `rm -rf` is evil
alias pg='pgrep --full --list-full'
alias pk='pgrep --full'
alias psg='ps aux|grep --color=auto'
alias xi='xinit -- -nolisten tcp -ardelay 170 -arinterval 40 :0 vt$XDG_VTNR'
alias pa=parallel
alias wee=weechat-curses
alias hopper=~/.local/opt/hopper/usr/bin/hopper-v3
alias strings='strings -a' # CVE-2014-8485

alias mtr='sudo mtr --curses'

alias l="ls -l"
alias la='l -A'
alias lh='l -lh'
alias which='which -a'

alias mc='make clean'
alias tmuxa='tmux a || tmux new -s default'

alias o='fasd -fe xdg-open'
alias sv='fasd -fe "sudo vim"'
alias se=sudoedit
alias e='fasd -fe "emacsclient -c -n"'
alias j='fasd_cd -d'
alias m='fasd -fe mplayer'

alias head='head -n $((${LINES:-`tput lines 4>/dev/null||echo -n 12`} - 3))'
alias tail='tail -n $((${LINES:-`tput lines 4>/dev/null||echo -n 12`} - 3))'
alias clip='xsel -ib'
alias free='free -m'
alias gr='[[ ! -z `git rev-parse --show-cdup` ]] && cd `git rev-parse --show-cdup` || pwd'
alias -g NF=".*(oc[1])"
alias -g ND="/*(oc[1])"
alias -g N='>/dev/null'
alias -g NN='2>/dev/null'
alias mou='sudo mount -o users,uid=1000,gid=1000,codepage=936,utf8'
alias win='WINEPATH="d:/mingw/bin;d:/mingw/msys/1.0/bin" wine'
alias c=cat
alias L=less
alias t=task
alias g='grep --color=auto -I'
alias eg='egrep --color=auto -I'
alias off='LC_ALL=C grep --color=auto -Pabo'
alias df='df -Th'
alias dmesg='dmesg -H || dmesg | less'
alias du='du -h'
alias du1='du --max-depth 1 | sort -rh | head'
alias dstat='dstat -dnmcl --socket --top-io -N eth0,wlan0'
alias adate='for i in US/Eastern Australia/{Brisbane,Sydney} Asia/{Hong_Kong,Singapore} Europe/Paris; do printf %-22s "$i:";TZ=$i date +"%m-%d %a %H:%M";done' #date for US and CN
alias rsync='rsync --progress --partial'
alias drsync='rsync --progress --partial --delete --size-only'
alias port='netstat -ntlp'
alias wgetpaste='wgetpaste -X'
alias 2pdf='libreoffice --headless --convert-to pdf'
alias 2csv='libreoffice --headless --convert-to csv'
alias g2u='iconv -f GBK -t UTF-8'
alias u2g='iconv -f UTF-8 -t GBK'
alias ntp='sudo /etc/init.d/ntp-client start'
alias mt=multitail
#alias luit='luit -encoding gbk'
alias gdb='gdb -q'
alias getmail='getmail -r rc0 -r rc1'
alias pwget='proxychains wget'
alias pyftp='python2 -m pyftpdlib'
#alias wps=/opt/kingsoft-office_9.1.0.4280~a12p4_x86/wps
#alias wpp=/opt/kingsoft-office_9.1.0.4280~a12p4_x86/wpp
#alias et=/opt/kingsoft-office_9.1.0.4280~a12p4_x86/et
alias prx='proxychains'
alias quartus=$HOME/.local/opt/quartus/quartus/bin/quartus
alias vnc='vncviewer -QualityLevel=0 -CompressLevel=3 -PreferredEncoding=ZRLE -FullScreen=1 -Shared=1'
alias spice='spicec -h 0 -p 5900'
alias burp='java -jar ~/.local/opt/burpsuite_pro_v1.4.07+.jar'
alias mingw='PATH=$PATH:/opt/mingw/libexec/gcc/i686-w64-mingw32/4.9.0 /opt/mingw/i686-w64-mingw32/bin/g++ -std=c++11 -I/opt/mingw/i686-w64-mingw32/include/c++/4.9.0 -I/opt/mingw/i686-w64-mingw32/include/c++/4.9.0/i686-w64-mingw32 -I/opt/mingw/i686-w64-mingw32/include -I/opt/mingw/lib/gcc/i686-w64-mingw32/4.9.0/include'
alias matlab='~/.local/opt/matlab/bin/matlab'
alias math='~/.local/opt/mathematica/Executables/Mathematica -graphicssystem native'
alias matlabc='~/.local/opt/matlab/bin/matlab -nodisplay -r clc'
alias blockdump='sudo sysctl vm.block_dump=1'
alias xsel='xsel -l /dev/null'
alias eclimd=$LOCAL/opt/eclipse/eclimd
alias wine='WINEDEBUG=-all wine'
alias ctag='ctags -R --c++-kinds=+p --fields=+iaS --extra=+q'
alias perf='sudo perf'
alias mtp='simple-mtpfs /media'
alias jc='~/.local/opt/j64-803/jconsole.sh'
alias jqt='~/.local/opt/j64-803/jqt.sh'

alias admb='LDFLAGS="-L$ADMB_HOME/lib -L$ADMB_HOME/contrib" CXXFLAGS=-I$ADMB_HOME/include admb'

alias jdgui=$LOCAL/bin/jd-gui

alias ga='git add'
alias gau='git add -u'
alias gpu='git push'
alias gpl='git pull'
alias gl='git log'
alias glp='git log -p'
alias ghost='command gs'
alias gd='git diff'
alias gdc='git diff --cached'
alias gm='git commit -m'
alias gma='git commit -am'
alias gb='git branch'
alias gc='git checkout'
alias gr='git remote'
alias gcl='git clone'

alias rspec='spring rspec --color'

alias mount='sudo mount'
alias umount='sudo umount'

alias status='sudo systemctl status'
alias start='sudo systemctl start'
alias restart='sudo systemctl restart'
alias reload='sudo systemctl reload'
alias stop='sudo systemctl stop'
#alias enable='sudo systemctl enable' # zsh: Failed to issue method call: No such file or directory
#alias disable='sudo systemctl disable'

alias cal='cal -3'
alias aS='sudo aura -S'
alias aSs='aura -Ss'
alias aA='sudo aura -A'
alias aAs='aura -As'
alias aSyu='aura -Syu'
alias pD='sudo pacman -D'
alias yS='yaourt -S --noconfirm'
alias ySs='yaourt -Ss'
alias ySyu='yaourt -Syua'
alias pSy='sudo pacman -Sy'
alias pSyu='sudo pacman -Syu'		# Synchronize with repositories and then upgrade packages that are out of date on the local system.
alias pS='sudo pacman -S'		# Install specific package(s) from the repositories
alias pU='sudo pacman -U'		# Install specific package not from the repositories but from a file 
alias pR='sudo pacman -R'		# Remove the specified package(s), retaining its configuration(s) and required dependencies
alias pRns='sudo pacman -Rns'		# Remove the specified package(s), its configuration(s) and unneeded dependencies
alias pSi='pacman -Si'			# Display information about a given package in the repositories
alias pSs='pacman -Ss'			# Search for package(s) in the repositories
alias pQi='pacman -Qi'			# Display information about a given package in the local database
alias pQs='pacman -Qs'			# Search for package(s) in the local database
alias paclo="pacman -Qdt"		# List all packages which are orphaned
alias pacc="sudo pacman -Scc"		# Clean cache - delete all not currently installed package files
alias pQl="pacman -Ql"			# List all files installed by a given package
alias pacexp="sudo pacman -D --asexp"	# Mark one or more installed packages as explicitly installed 
alias pacdep="sudo pacman -D --asdep"	# Mark one or more installed packages as non explicitly installed
alias api='sudo aptitude install'
alias aps='sudo aptitude search'
alias apu='sudo aptitude update'
alias yui='sudo yum install'
alias yus='sudo yum search'

alias ob='objdump -M intel'
alias re='readelf -W'
alias dhc='sudo dhcpcd -x wlan0; sudo dhcpcd wlan0 -C /lib/dhcpcd/dhcpcd-hooks/20-resolv.conf'
alias xst='xstow -d ~/.local/stow'
alias st=strace
alias lt=ltrace

alias ccode='export CXXFLAGS="-g -D_FORTIFY_SOURCE=1 -fstack-protector -ftrapv"'
alias xor=~/Dev/Crypto/xortool/xortool.py
alias rgdb='gdb -ix ~/.gdb/gdbinit.asm'
alias agdb='gdb -ix ~/.gdb/gdbinit.algo'

# Gentoo-specific {{{2
if [[ -n "$EPREFIX" ]]; then
  SUDO_IFNOT_PREFIX=
else
  SUDO_IFNOT_PREFIX='sudo '
fi
alias eme="${SUDO_IFNOT_PREFIX}emerge"
alias peme='sudo proxychains emerge'
alias ebuildncd=sudo FEATURES='-collision-detect -protected-owned' ebuild
alias ei='eix -uI --only-names'
alias eiu='FORMAT="<installedversions:I>" I="<category>/<name>-<version>[<use>]\n" eix'
alias disp='sudo dispatch-conf'
alias book='cd ~/Book && xdg-open http://0:4000; gitbook serve -o /tmp/book'

alias cifs='sudo mount -t cifs //10.0.0.3/c /mnt -o iocharset=utf8,user=Administrator,pass=,uid=1000,gid=1000,users --verbose'

mtrg() {
  sudo mtr -lnc 1 "$1" | awk 'function geo(ip) {s="geoiplookup "ip; s|&getline; s|&getline; split($0, a, "[,:] "); return a[3]","a[4]","a[5]","a[6]}; $1=="h" { print "h "$2" "$3" "geo($3)}' 
}

johnrar() {
   /usr/sbin/rar2john "$1" > /tmp/_.john && \
     /usr/sbin/john --wordlist=~/Security/Dict/password-dict.txt /tmp/_.john
}

web() {
  #twistd web --path "$1" -p "${2:-8000}"
  ruby -run -e httpd "$1" -p "${2:-8000}"
}

ord() { printf "0x%x\n" "'$1'"; }
chr() { printf $(printf '\\%03o\\n' "$1"); }
uniinfo() { python -c "import unicodedata as u; print u.name(unichr("$1"))"; }
udevinfo() { udevadm info -a -p $(udevadm info -q path -n $1); }


use() { rm test; ln -s test-$1 test; }
aa() { awk -vn=$1 'NR==1 {print n} 1 < NR && NR <= n+1' "$2" > "$3"; }


alias cf='cpupower frequency-info'
alias cs='cpupower frequency-set'
